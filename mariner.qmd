---
format:
  revealjs:
    incremental: true
    transition: none
    theme: css/custom.scss
    slide-number: true
    logo: images/bcb_logo.png
    footer: <https://github.com/EricSDavis/mariner>
    chalkboard: true
editor: source
bibliography: references.bib
editor_options: 
  chunk_output_type: console
---


## {auto-animate=true}

<div class="header">
  <img src="images/mariner_no_text_cropped.png" />
  <h1>Mariner</h1>
<div>

::: {.subheader .absolute left=40% top=65%}
BCB Student Seminar

Eric Davis

Phanstiel Lab

09/01/2022
:::

## {auto-animate=true}

<div class="header">
  <img src="images/mariner_no_text_cropped.png" />
  <h1 style="top:0px;margin-bottom:0px;color:#ff9865;">Mariner</h1>
  <h4>"Explore the Hi-C's"</h4>
<div>

::: {.subheader .absolute left=40% top=65%}
BCB Student Seminar

Eric Davis

Phanstiel Lab

09/01/2022
:::


<!-- Why do we need this? -->

# Why do we need this? {.center .middle}

## Why do we need this?

![](https://imgs.xkcd.com/comics/standards.png){.absolute width=70% top=15% left=15%}


<!-- Table Existing software -->

## Why do we need this? {.smaller}

<table class="tg">
<thead>
  <tr>
    <th class="tg-nrix" rowspan="2">Software</th>
    <th class="tg-nrix" rowspan="2">Language</th>
    <th class="tg-nrix" colspan="3">Extracting</th>
    <th class="tg-nrix" colspan="3">Aggregating</th>
    <th class="tg-nrix" rowspan="2">Range Operations</th>
    <th class="tg-nrix" rowspan="2">Differential Analysis</th>
    <th class="tg-nrix" rowspan="2">Visualization</th>
  </tr>
  <tr>
    <th class="tg-57iy">Pixels</th>
    <th class="tg-57iy">Matrices</th>
    <th class="tg-57iy">Custom</th>
    <th class="tg-57iy">Matrices</th>
    <th class="tg-57iy">TADs/Stripes</th>
    <th class="tg-57iy">Custom</th>
  </tr>
</thead>
<tbody>
  <tr>
    <td class="tg-nrix">[Juicer tools](https://github.com/aidenlab/juicer)</td>
    <td class="tg-nrix">
      ![](images/terminal.png){width=25px}
      ![](images/javalogo.svg){width=25px}
    </td>
    <td class="tg-nrix">✅</td>
    <td class="tg-nrix">✅</td>
    <td class="tg-nrix">❌</td>
    <td class="tg-nrix">✅</td>
    <td class="tg-nrix">❌</td>
    <td class="tg-nrix">❌</td>
    <td class="tg-nrix">❌</td>
    <td class="tg-nrix">❌</td>
    <td class="tg-nrix">❌</td>
  </tr>
  <tr>
    <td class="tg-57iy">
      [HiCmapTools](https://bmcbioinformatics.biomedcentral.com/track/pdf/10.1186/s12859-022-04589-y.pdf)
    </td>
    <td class="tg-57iy">![](images/terminal.png){width=25px}</td>
    <td class="tg-57iy">✅</td>
    <td class="tg-57iy">✅</td>
    <td class="tg-57iy">❌</td>
    <td class="tg-57iy">✅</td>
    <td class="tg-57iy">✅</td>
    <td class="tg-57iy">❌</td>
    <td class="tg-57iy">❌</td>
    <td class="tg-57iy">❌</td>
    <td class="tg-57iy">⚠️</td>
  </tr>
  <tr>
    <td class="tg-nrix">[coolpup.py](https://github.com/open2c/coolpuppy)</td>
    <td class="tg-nrix">![](images/pythonLogo.webp){width=25px}</td>
    <td class="tg-nrix">❌</td>
    <td class="tg-nrix">❌</td>
    <td class="tg-nrix">❌</td>
    <td class="tg-nrix">✅</td>
    <td class="tg-nrix">✅</td>
    <td class="tg-nrix">❌</td>
    <td class="tg-nrix">❌</td>
    <td class="tg-nrix">❌</td>
    <td class="tg-nrix">⚠️</td>
  </tr>
  <tr>
    <td class="tg-57iy">[Juice Box](https://aidenlab.org/juicebox/)</td>
    <td class="tg-57iy">![](images/chrome.png){width=25px}</td>
    <td class="tg-57iy">❌</td>
    <td class="tg-57iy">❌</td>
    <td class="tg-57iy">❌</td>
    <td class="tg-57iy">❌</td>
    <td class="tg-57iy">❌</td>
    <td class="tg-57iy">❌</td>
    <td class="tg-57iy">❌</td>
    <td class="tg-57iy">❌</td>
    <td class="tg-57iy">✅</td>
  </tr>
  <tr>
    <td class="tg-nrix">[HiGlass](http://higlass.io/)</td>
    <td class="tg-nrix">![](images/chrome.png){width=25px}</td>
    <td class="tg-nrix">❌</td>
    <td class="tg-nrix">❌</td>
    <td class="tg-nrix">❌</td>
    <td class="tg-nrix">❌</td>
    <td class="tg-nrix">❌</td>
    <td class="tg-nrix">❌</td>
    <td class="tg-nrix">❌</td>
    <td class="tg-nrix">❌</td>
    <td class="tg-nrix">✅</td>
  </tr>
  <tr>
    <td class="tg-57iy">
      [Bedtools](https://bedtools.readthedocs.io/en/latest/)
    </td>
    <td class="tg-57iy">
      ![](images/terminal.png){width=25px}
      ![](images/RLogo.webp){width=25px}
    </td>
    <td class="tg-57iy">❌</td>
    <td class="tg-57iy">❌</td>
    <td class="tg-57iy">❌</td>
    <td class="tg-57iy">❌</td>
    <td class="tg-57iy">❌</td>
    <td class="tg-57iy">❌</td>
    <td class="tg-57iy">✅</td>
    <td class="tg-57iy">❌</td>
    <td class="tg-57iy">❌</td>
  </tr>
</tbody>
</table>


- Hi-C tools are **dispersed** across
  programming languages/environments.
  
  - Steep learning curve
  - Difficult to create reproducible
    workflow.

- Some functionality is either
  impossible or impractical.


<!-- Bioconductor environment -->

# Advantages of the Bioconductor environment {.center .middle}

## Bioconductor environment {auto-animate=true}

![](images/bioclogo.png){.absolute width="150px" top=0 right=0}

- Keep all analyses in R
- Classes for working with genomic data

. . . 

```{.r code-line-numbers="|3"}
## Genomic ranges
library(GenomicRanges)
GRanges("chr1:1-10000")

## Alternate method
GRanges(seqnames = c("chr1", "chr2"),
        ranges = IRanges(start = c(1, 30000),
                         end = c(10000, 60000)))
```

. . . 

```{r}
## Genomic ranges
library(GenomicRanges)
GRanges("chr1:1-10000")
```

. . .

## Bioconductor environment {auto-animate=true}

![](images/bioclogo.png){.absolute width="150px" top=0 right=0}

::: {.nonincremental}
- Keep all analyses in R
- Classes for working with genomic data
:::

```{.r code-line-numbers="6-9"}
## Genomic ranges
library(GenomicRanges)
GRanges("chr1:1-10000")

## Alternate method
GRanges(seqnames = c("chr1", "chr2"),
        ranges = IRanges(start = c(1, 30000),
                         end = c(10000, 60000)))
```

. . .

```{r}
## Alternate method
GRanges(seqnames = c("chr1", "chr2"),
        ranges = IRanges(start = c(1, 30000),
                         end = c(10000, 60000)))
```

. . .

## Bioconductor environment {auto-animate=true}


![](images/bioclogo.png){.absolute width="150px" top=0 right=0}

::: {.nonincremental}
- Keep all analyses in R
- Classes for working with genomic data
:::

```{.r code-line-numbers="6-9|12-13"}
## Genomic ranges
library(GenomicRanges)
GRanges("chr1:1-10000")

## Alternate method
GRanges(seqnames = c("chr1", "chr2"),
        ranges = IRanges(start = c(1, 30000),
                         end = c(10000, 60000)))

## Genomic interactions
library(InteractionSet)
GInteractions(anchor1 = GRanges("chr1:1-10000"),
              anchor2 = GRanges("chr1:1-10000"))
```
 
. . . 

```{r}
## Genomic interactions
library(InteractionSet)
GInteractions(anchor1 = GRanges("chr1:1-10000"),
              anchor2 = GRanges("chr1:1-10000"))
```


# Mariner functionality {.center .middle}

## Manipulating/Merging Pairs
::: columns
::: {.column width="50%"}
```{.r code-line-numbers="1"}
as_ginteractions(df, ...)

binPairs(x, binSize, pos1, pos2, ...) 

filterPairs(x, binSize, ...)

mergePairs(x, radius, ...)
```

<br>
[Convert `data.frame` to `GInteractions`]{style="font-size:22pt"}

:::

::: {.column .middle width="50%"}
![](images/paste-B9258AD3.png){width=50%}
:::
:::

## Manipulating/Merging Pairs
::: columns
::: {.column width="50%"}
```{.r code-line-numbers="3"}
as_ginteractions(df, ...)

binPairs(x, binSize, pos1, pos2, ...) 

filterPairs(x, binSize, ...)

mergePairs(x, radius, ...)
```

<br>
[Assign paired-ranges to specified `binSize`]{style="font-size:22pt"}

:::

::: {.column .middle width="50%"}
![](images/paste-B9258AD3.png){width=50%}
:::
:::

## Manipulating/Merging Pairs
::: columns
::: {.column width="50%"}
```{.r code-line-numbers="5"}
as_ginteractions(df, ...)

binPairs(x, binSize, pos1, pos2, ...) 

filterPairs(x, binSize, buffer, ...)

mergePairs(x, radius, ...)
```

<br>
[Filter out paired-ranges that would
intersect the diagonal]{style="font-size:22pt"}


:::

::: {.column .middle width="50%"}
![](images/filterPairs.png){width=50%}
:::
:::

## Manipulating/Merging Pairs
::: columns
::: {.column width="50%"}
```{.r code-line-numbers="7"}
as_ginteractions(df, ...)

binPairs(x, binSize, pos1, pos2, ...) 

filterPairs(x, binSize, buffer, ...)

mergePairs(x, radius, ...)
```

<br>
[Cluster pairs with DBSCAN, then select
a representative pair.]{style="font-size:22pt"}


:::

::: {.column .middle width="50%"}
![](images/mergePairs.png){width=80%}
:::
:::


## Generating Pairs from Ranges

::: columns
::: {.column width="50%"}
```{.r}
rangesToPairs(x, window, ...)

rangesToPairs(x, y, window, ...)

rangesToPairs(x, y, within, ...)
```

<br>
[Different ways to generate paired-ranges
from range objects (i.e. BED files).]{style="font-size:22pt"}


:::

::: {.column .middle width="50%"}
![](images/Clipboard_2022-08-22-23-17-19.png){width=80%}
:::
:::

## Extracting/Aggregating Interactions {auto-animate=true}

::: columns
::: {.column width="50%"}

**Extracting Hi-C Pixels**
```{.r}
pullHicPixels(x, hic, ...)

pullHicMatrices(x, hic, buffer, ...)

pullHicDomains(x, hic, ...)
```

[**Pull** different subsets of Hi-C data]{style="font-size:22pt"}

:::

::: {.column .middle width="50%"}
![](images/apa.png){width=40%}
:::
:::

## Extracting/Aggregating Interactions {auto-animate=true}

::: columns
::: {.column width="50%"}

**Extracting Hi-C Pixels**
```{.r}
pullHicPixels(x, hic, ...)

pullHicMatrices(x, hic, buffer, ...)

pullHicDomains(x, hic, ...)
```

**Aggregating Hi-C Contacts**
```{.r}
aggregate(x, hic, shape, fun, ...)

summarize(x, hic, ...)
```

[**Pull** different subsets of Hi-C data]{style="font-size:22pt"}

[**Aggregate** or **summarize** in custom shapes]{style="font-size:22pt"}

:::

::: {.column .middle width="50%"}
![](images/apa_aggregate.png){width=40%}
:::
:::

# Workflows {.center .middle}

## {auto-animate=true .middle}

::: {style="height:50%; width:100%; margin:auto;"}

![](images/diffLoopCalling.png){width=50%}

:::

::: {style="height:50%; width:100%; margin:auto;"}

Differential loop calling

:::

::: footer
@ahn2021
:::

## {auto-animate=true .middle}

::: {style="height:50%; width:100%; margin:auto;"}

![](images/apa_analysis2.png){width=100%}

:::

::: {style="height:50%; width:100%; margin:auto;"}

Inter/Intrachromosomal pile-up analysis

[Differential loop calling]{style="color:#787878;"}

:::

::: footer
In collaboration with Wang Lab, Sarah Parker, Isha Sahasrabudhe,
Yoseli Quiroga and JP Flores.
:::

## {auto-animate=true .middle}

::: {style="height:50%; width:100%; margin:auto;"}

![](images/loopDecay.png){width=35%}

:::

::: {style="height:50%; width:100%; margin:auto;"}

Characterizing loop signal decay

[Inter/Intrachromosomal pile-up analysis]{style="color:#787878;"}

[Differential loop calling]{style="color:#989898;"}

:::

## {auto-animate=true .middle}

::: {style="height:50%; width:100%; margin:auto;"}

![](images/contact_enrichment1.png){height=300px}
![](images/contact_enrichment2.png){height=300px}

:::

::: {style="height:50%; width:100%; margin:auto;"}

Target contact enrichment

[Characterizing loop signal decay]{style="color:#787878;"}

[Inter/Intrachromosomal pile-up analysis]{style="color:#989898;"}

[Differential loop calling]{style="color:	#B8B8B8;"}

:::

::: footer
@kelly2022
:::

## {auto-animate=true .middle}

::: {style="height:50%; width:100%; margin:auto;"}

![](images/deNovoTADs.png){width=25%}

:::

::: {style="height:50%; width:100%; margin:auto;"}

Identifying _de Novo_ loops/TADs

[Target contact enrichment]{style="color:#787878;"}

[Characterizing loop signal decay]{style="color:#989898;"}

[Inter/Intrachromosomal pile-up analysis]{style="color:	#B8B8B8;"}

[Differential loop calling]{style="color:	#D8D8D8;"}

:::

::: footer
In collaboration with Marielle Bond
:::


## {auto-animate=true .middle}

::: {style="height:50%; width:100%; margin:auto;"}

![](images/deNovoTADs.png){width=25%}

:::

::: {style="height:50%; width:100%; margin:auto;"}

**Identifying _de Novo_ loops/TADs**

[Target contact enrichment]{style="color:#787878;"}

[Characterizing loop signal decay]{style="color:#989898;"}

[Inter/Intrachromosomal pile-up analysis]{style="color:	#B8B8B8;"}

[Differential loop calling]{style="color:	#D8D8D8;"}

:::

::: footer
In collaboration with Marielle Bond
:::

# Example: Calling _de novo_ loops {.center .middle auto-animate=true}

## Prepare the data

```{r}
#| echo: true
#| code-line-numbers: "|5-8|10-14|15"
#| code-overflow: scroll
#| output-location: default

## Load required packages
library(data.table)
library(mariner)

## List loop files for each timepoint
bedpeFiles <-
  list.files(path = "data/loops",
             full.names = TRUE)

## Read in data and format as GInteractions
giList <-
  lapply(bedpeFiles, fread) |>
  lapply(as_ginteractions) |>
  setNames(gsub("[^0-9]+", "", bedpeFiles))
```

## Prepare the data

```{r}
#| echo: true
#| code-line-numbers: true
#| code-overflow: scroll
#| output-location: default
giList
```


## Cluster and merge pairs

```{.r code-line-numbers="1-5|6"}
## Cluster and merge pairs
mgi <- 
  mergePairs(x = giList,
             radius = 10e03,
             method = "manhattan")
mgi
```

. . . 

```{r}
## Cluster and merge pairs
mgi <- 
  mergePairs(x = giList,
             radius = 10e03,
             method = "manhattan")
mgi
```


## Closer look at the MergedGInteractions object {.r-fit-text .scrollable}

```{r}
#| echo: true
#| code-line-numbers: true
#| code-overflow: scroll

## How did it merge?
selectionMethod(mgi)

## What are the clusters?
tail(mgi)
getPairClusters(tail(mgi))

## Let's recover TAD names
mgi <- aggPairMcols(mgi, columns = "APScoreAvg", funs = "mean")
tail(mgi)
```

## Calling _de novo_ with `subsetBySource()` {.scrollable}

```{r}
#| echo: true
#| code-line-numbers: true
#| code-overflow: scroll

## Available sources
sources(mgi)

## Subsetting loops by source
subsetBySource(mgi)

## Transient loops
subsetBySource(x = mgi,
               include = "360",
               exclude = c("0", "4320"))

## De novo (must be in 72 but not in 0)
deNovo <-
  subsetBySource(x = mgi,
                 include = "4320",
                 exclude = "0")
deNovo
```

## Format for visualization

```{r}
#| echo: true
#| code-line-numbers: true
#| code-overflow: scroll

## Assign to Hi-C bins
deNovo <- 
  binPairs(x = deNovo,
           binSize = 10e03)

## Change chromosome style
library(package = "GenomeInfoDb",
        include.only = "seqlevelsStyle")
seqlevelsStyle(deNovo) <- "ENSEMBL"
deNovo
```

## Visualize with `plotgardener`

```{r}
#| echo: true
#| code-line-numbers: true
#| code-overflow: scroll
#| output-location: slide

## Load libraries
library(plotgardener)

## Define common params
p <- pgParams(assembly = "hg38",
              
             ## Define region of interest
             chrom = "7",
             chromstart = 54660000,
             chromend = 55350000,
             resolution = 10e03,
             zrange = c(0, 275),
             norm = "SCALE",
             
             ## Define reference point
             x = 0.5,
             y = 0.5,
             width = 3,
             height = 3,
             length = 3,
             space = 0.1)

## Initialize page
pageCreate(width = 4, height = 4, showGuides = FALSE)

## Hi-C plots
top <- 
  plotHicSquare(data = "data/hic/MEGA_K562_WT_0_inter.hic",
                params = p,
                half = "top")
bottom <- 
  plotHicSquare(data = "data/hic/MEGA_K562_WT_4320_inter.hic",
                params = p,
                half = "bottom")

## Annotate loop pixels
annoPixels(plot = bottom,
           data = deNovo,
           shift = 3,
           col = 'red',
           params = p)

## Annotate heatmap legend
annoHeatmapLegend(plot = bottom,
                  params = p,
                  orientation = "v",
                  fontcolor = "black",
                  x = p$x + p$width + p$space,
                  width = p$space,
                  height = p$height*0.5)
    
## Label genome
annoGenomeLabel(plot = bottom,
                params = p,
                y = p$y + p$height,
                scale = "bp")

## Text annotations
plotText(label = c("0 hrs", "72 hrs"),
         fontcolor = "black",
         x = p$x + p$space,
         y = p$y + p$space,
         just = c('left', 'top'))

plotText(label = "72 hrs",
         fontcolor = "black",
         x = p$x + p$width - p$space,
         y = p$y + p$height - p$space,
         just = c("right", "bottom"))
```

# References {.center .middle}

## References
::: {#refs}
:::